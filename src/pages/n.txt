import { motion } from 'framer-motion';
import { useState } from 'react';

const CreateListing = () => {
  const styles = {
    container: {
      maxWidth: '56rem',
      margin: '0 auto',
      padding: '1.5rem',
    },
    heading: {
      fontSize: '1.875rem',
      fontWeight: 'bold',
      textAlign: 'center',
      marginBottom: '2rem',
    },
    form: {
      display: 'flex',
      flexDirection: 'column',
      gap: '1.5rem',
    },
    inputGroup: {
      display: 'flex',
      flexDirection: 'column',
      gap: '1rem',
    },
    input: {
      width: '100%',
      padding: '0.75rem',
      border: '1px solid #ccc',
      borderRadius: '0.25rem',
    },
    checkboxGroup: {
      display: 'flex',
      gap: '1rem',
      flexWrap: 'wrap',
    },
    checkboxLabel: {
      display: 'flex',
      alignItems: 'center',
      gap: '0.5rem',
    },
    numberInput: {
      width: '5rem',
      padding: '0.75rem',
      border: '1px solid #ccc',
      borderRadius: '0.25rem',
    },
    label: {
      marginLeft: '0.5rem',
    },
    priceInput: {
      width: '8rem',
      padding: '0.75rem',
      border: '1px solid #ccc',
      borderRadius: '0.25rem',
    },
    imageUploadSection: {
      display: 'flex',
      flexDirection: 'column',
      gap: '0.5rem',
    },
    fileInput: {
      border: '1px solid #ccc',
      padding: '0.5rem',
      borderRadius: '0.25rem',
    },
    uploadButton: {
      marginLeft: '0.5rem',
      padding: '0.5rem 1rem',
      backgroundColor: '#16a34a',
      color: 'white',
      borderRadius: '0.25rem',
      border: 'none',
      cursor: 'pointer',
    },
    submitButton: {
      width: '100%',
      padding: '0.75rem',
      backgroundColor: '#334155',
      color: 'white',
      borderRadius: '0.25rem',
      border: 'none',
      cursor: 'pointer',
    },
  };

  const [formData, setFormData] = useState({
    name: '',
    description: '',
    address: '',
    isRent: true,
    isSell: false,
    hasParking: false,
    isFurnished: false,
    isOffer: false,
    beds: 1,
    baths: 1,
    regularPrice: 0,
    images: []
  });

  const fadeIn = {
    initial: { opacity: 0, y: 20 },
    animate: { opacity: 1, y: 0 },
    transition: { duration: 0.5 }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(formData);
  };

  const handleImageUpload = (e) => {
    const files = Array.from(e.target.files);
    setFormData({ ...formData, images: files });
  };

  return (
    <motion.div 
      style={styles.container}
      initial="initial"
      animate="animate"
      variants={fadeIn}
    >
      <motion.h1 
        style={styles.heading}
        variants={fadeIn}
      >
        Create a Listing
      </motion.h1>

      <form onSubmit={handleSubmit} style={styles.form}>
        <motion.div variants={fadeIn} style={styles.inputGroup}>
          <input
            type="text"
            placeholder="Name"
            style={styles.input}
            value={formData.name}
            onChange={(e) => setFormData({...formData, name: e.target.value})}
          />

          <textarea
            placeholder="Description"
            style={styles.input}
            value={formData.description}
            onChange={(e) => setFormData({...formData, description: e.target.value})}
          />

          <input
            type="text"
            placeholder="Address"
            style={styles.input}
            value={formData.address}
            onChange={(e) => setFormData({...formData, address: e.target.value})}
          />
        </motion.div>

        <motion.div variants={fadeIn} style={styles.checkboxGroup}>
          <label style={styles.checkboxLabel}>
            <input
              type="checkbox"
              checked={formData.isSell}
              onChange={(e) => setFormData({...formData, isSell: e.target.checked})}
            />
            Sell
          </label>
          <label style={styles.checkboxLabel}>
            <input
              type="checkbox"
              checked={formData.isRent}
              onChange={(e) => setFormData({...formData, isRent: e.target.checked})}
            />
            Rent
          </label>
        </motion.div>

        <motion.div variants={fadeIn} style={styles.checkboxGroup}>
          <div>
            <input
              type="number"
              placeholder="Beds"
              style={styles.numberInput}
              value={formData.beds}
              onChange={(e) => setFormData({...formData, beds: e.target.value})}
            />
            <span style={styles.label}>Beds</span>
          </div>
          <div>
            <input
              type="number"
              placeholder="Baths"
              style={styles.numberInput}
              value={formData.baths}
              onChange={(e) => setFormData({...formData, baths: e.target.value})}
            />
            <span style={styles.label}>Baths</span>
          </div>
        </motion.div>

        <motion.div variants={fadeIn} style={styles.inputGroup}>
          <div>
            <input
              type="number"
              placeholder="Regular price"
              style={styles.priceInput}
              value={formData.regularPrice}
              onChange={(e) => setFormData({...formData, regularPrice: e.target.value})}
            />
            <span style={styles.label}>$ / Month</span>
          </div>

          <div style={styles.imageUploadSection}>
            <p>Images: The first image will be the cover (max 6)</p>
            <div>
              <input
                type="file"
                multiple
                accept="image/*"
                onChange={handleImageUpload}
                style={styles.fileInput}
              />
              <button type="button" style={styles.uploadButton}>
                UPLOAD
              </button>
            </div>
          </div>
        </motion.div>

        <motion.button
          variants={fadeIn}
          whileHover={{ scale: 1.02 }}
          whileTap={{ scale: 0.98 }}
          style={styles.submitButton}
          type="submit"
        >
          CREATE LISTING
        </motion.button>
      </form>
    </motion.div>
  );
};

export default CreateListing;